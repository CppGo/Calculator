#include "Calculator.h"

Calculator::Calculator(QWidget *parent)
	: QWidget(parent)
{
	//ui.setupUi(this);
	//初始化部件对象指针
	button_0 = new QPushButton("0", this);
	button_1 = new QPushButton("1", this);
	button_2 = new QPushButton("2", this);
	button_3 = new QPushButton("3", this);
	button_4 = new QPushButton("4", this);
	button_5 = new QPushButton("5", this);
	button_6 = new QPushButton("6", this);
	button_7 = new QPushButton("7", this);
	button_8 = new QPushButton("8", this);
	button_9 = new QPushButton("9", this);
	button_plus = new QPushButton("+", this);
	button_minus = new QPushButton("-", this);
	button_multiply = new QPushButton("*", this);
	button_devide = new QPushButton("/", this);
	button_equal = new QPushButton("=", this);
	button_clear = new QPushButton("CE", this);
	button_clearAll = new QPushButton("C", this);
	button_square = new QPushButton("x^2", this);
	button_cube = new QPushButton("x^3", this);
	button_sq_root = new QPushButton("sqr", this);
	button_reciprocal = new QPushButton("1/x", this);
	button_x_Y = new QPushButton("x^y", this);
	button_10_X = new QPushButton("10^x", this);
	button_Exp = new QPushButton("Exp", this);
	button_lg = new QPushButton("lg", this);
	button_ln = new QPushButton("ln", this);
	button_sin = new QPushButton("sin", this);
	button_cos = new QPushButton("cos", this);
	button_tan = new QPushButton("tan", this);
	button_opp = new QPushButton("+/-", this);
	button_00 = new QPushButton("00", this);
	button_decpoint = new QPushButton(".", this);
	button_Mod = new QPushButton("Mod", this);
	button_Lsh = new QPushButton("Lsh", this);
	button_Rsh = new QPushButton("Rsh", this);
	button_RoL = new QPushButton("RoL", this);
	button_RoR = new QPushButton("RoR", this);
	button_Or = new QPushButton("Or", this);
	button_Xor = new QPushButton("Xor", this);
	button_Not = new QPushButton("Not", this);
	button_And = new QPushButton("And", this);
	button_backspace = new QPushButton("<-", this);
	button_factorial = new QPushButton("n!", this);
	button_left = new QPushButton("(", this);
	button_right = new QPushButton(")", this);

	lineEdit = new QLineEdit(this);
	//禁止编辑文本框
	lineEdit->setReadOnly(true);
	//设置固定大小
	lineEdit->setFixedSize(800, 70);

	button_0->setFixedSize(80, 80);
	button_1->setFixedSize(80, 80);
	button_2->setFixedSize(80, 80);
	button_3->setFixedSize(80, 80);
	button_4->setFixedSize(80, 80);
	button_5->setFixedSize(80, 80);
	button_6->setFixedSize(80, 80);
	button_7->setFixedSize(80, 80);
	button_8->setFixedSize(80, 80);
	button_9->setFixedSize(80, 80);
	button_plus->setFixedSize(80, 80);
	button_minus->setFixedSize(80, 80);
	button_multiply->setFixedSize(80, 80);
	button_devide->setFixedSize(80, 80);
	button_equal->setFixedSize(80, 80);
	button_clear->setFixedSize(80, 80);
	button_clearAll->setFixedSize(80, 80);
	button_square->setFixedSize(80, 80);
	button_cube->setFixedSize(80, 80);
	button_sq_root->setFixedSize(80, 80);
	button_reciprocal->setFixedSize(80, 80);
	button_x_Y->setFixedSize(80, 80);
	button_10_X->setFixedSize(80, 80);
	button_Exp->setFixedSize(80, 80);
	button_lg->setFixedSize(80, 80);
	button_ln->setFixedSize(80, 80);
	button_sin->setFixedSize(80, 80);
	button_cos->setFixedSize(80, 80);
	button_tan->setFixedSize(80, 80);
	button_opp->setFixedSize(80, 80);
	button_00->setFixedSize(80, 80);
	button_decpoint->setFixedSize(80, 80);
	button_Mod->setFixedSize(80, 80);
	button_Lsh->setFixedSize(80, 80);
	button_Rsh->setFixedSize(80, 80);
	button_RoL->setFixedSize(80, 80);
	button_RoR->setFixedSize(80, 80);
	button_Or->setFixedSize(80, 80);
	button_Xor->setFixedSize(80, 80);
	button_Not->setFixedSize(80, 80);
	button_And->setFixedSize(80, 80);
	button_backspace->setFixedSize(80, 80);
	button_factorial->setFixedSize(80, 80);
	button_left->setFixedSize(80, 80);
	button_right->setFixedSize(80, 80);
	//网格布局
	QGridLayout *Grid = new QGridLayout;
	Grid->addWidget(lineEdit, 1, 1, 1, 9, Qt::Alignment());
	//六个参数的含义
	//部件指针, 所在行, 所在列, 占用行数, 占用列数, 对齐方式
	Grid->addWidget(button_square, 2, 1, 1, 1, Qt::Alignment());
	Grid->addWidget(button_x_Y, 2, 2, 1, 1, Qt::Alignment());
	Grid->addWidget(button_sin, 2, 3, 1, 1, Qt::Alignment());
	Grid->addWidget(button_cos, 2, 4, 1, 1, Qt::Alignment());
	Grid->addWidget(button_tan, 2, 5, 1, 1, Qt::Alignment());
	Grid->addWidget(button_clearAll, 2, 6, 1, 1, Qt::Alignment());
	Grid->addWidget(button_clear, 2, 7, 1, 1, Qt::Alignment());
	Grid->addWidget(button_backspace, 2, 8, 1, 1, Qt::Alignment());
	Grid->addWidget(button_devide, 2, 9, 1, 1, Qt::Alignment());
	Grid->addWidget(button_cube, 3, 1, 1, 1, Qt::Alignment());
	Grid->addWidget(button_10_X, 3, 2, 1, 1, Qt::Alignment());
	Grid->addWidget(button_lg, 3, 3, 1, 1, Qt::Alignment());
	Grid->addWidget(button_ln, 3, 4, 1, 1, Qt::Alignment());
	Grid->addWidget(button_opp, 3, 5, 1, 1, Qt::Alignment());
	Grid->addWidget(button_7, 3, 6, 1, 1, Qt::Alignment());
	Grid->addWidget(button_8, 3, 7, 1, 1, Qt::Alignment());
	Grid->addWidget(button_9, 3, 8, 1, 1, Qt::Alignment());
	Grid->addWidget(button_multiply, 3, 9, 1, 1, Qt::Alignment());
	Grid->addWidget(button_sq_root, 4, 1, 1, 1, Qt::Alignment());
	Grid->addWidget(button_Exp, 4, 2, 1, 1, Qt::Alignment());
	Grid->addWidget(button_Mod, 4, 3, 1, 1, Qt::Alignment());
	Grid->addWidget(button_Xor, 4, 4, 1, 1, Qt::Alignment());
	Grid->addWidget(button_Or, 4, 5, 1, 1, Qt::Alignment());
	Grid->addWidget(button_4, 4, 6, 1, 1, Qt::Alignment());
	Grid->addWidget(button_5, 4, 7, 1, 1, Qt::Alignment());
	Grid->addWidget(button_6, 4, 8, 1, 1, Qt::Alignment());
	Grid->addWidget(button_minus, 4, 9, 1, 1, Qt::Alignment());
	Grid->addWidget(button_reciprocal, 5, 1, 1, 1, Qt::Alignment());
	Grid->addWidget(button_factorial, 5, 2, 1, 1, Qt::Alignment());
	Grid->addWidget(button_left, 5, 3, 1, 1, Qt::Alignment());
	Grid->addWidget(button_right, 5, 4, 1, 1, Qt::Alignment());
	Grid->addWidget(button_And, 5, 5, 1, 1, Qt::Alignment());
	Grid->addWidget(button_1, 5, 6, 1, 1, Qt::Alignment());
	Grid->addWidget(button_2, 5, 7, 1, 1, Qt::Alignment());
	Grid->addWidget(button_3, 5, 8, 1, 1, Qt::Alignment());
	Grid->addWidget(button_plus, 5, 9, 1, 1, Qt::Alignment());
	Grid->addWidget(button_Lsh, 6, 1, 1, 1, Qt::Alignment());
	Grid->addWidget(button_Rsh, 6, 2, 1, 1, Qt::Alignment());
	Grid->addWidget(button_RoL, 6, 3, 1, 1, Qt::Alignment());
	Grid->addWidget(button_RoR, 6, 4, 1, 1, Qt::Alignment());
	Grid->addWidget(button_Not, 6, 5, 1, 1, Qt::Alignment());
	Grid->addWidget(button_0, 6, 6, Qt::Alignment());
	Grid->addWidget(button_00, 6, 7, 1, 1, Qt::Alignment());
	Grid->addWidget(button_decpoint, 6, 8, 1, 1, Qt::Alignment());
	Grid->addWidget(button_equal, 6, 9, 1, 1, Qt::Alignment());
	
	//把Grid布局设置给当前创建的对象
	this->setLayout(Grid);

	//实现连接函数
	connect(button_0, SIGNAL(bool), this, SLOT(button_0_clicked()));
	connect(button_1, SIGNAL(bool), this, SLOT(button_1_clicked()));
	connect(button_2, SIGNAL(bool), this, SLOT(button_2_clicked()));
	connect(button_3, SIGNAL(bool), this, SLOT(button_3_clicked()));
	connect(button_4, SIGNAL(bool), this, SLOT(button_4_clicked()));
	connect(button_5, SIGNAL(bool), this, SLOT(button_5_clicked()));
	connect(button_6, SIGNAL(bool), this, SLOT(button_6_clicked()));
	connect(button_7, SIGNAL(bool), this, SLOT(button_7_clicked()));
	connect(button_8, SIGNAL(bool), this, SLOT(button_8_clicked()));
	connect(button_9, SIGNAL(bool), this, SLOT(button_9_clicked()));
	connect(button_plus, SIGNAL(bool), this, SLOT(button_plus_clicked()));
	connect(button_minus, SIGNAL(bool), this, SLOT(button_minus_clicked()));
	connect(button_multiply, SIGNAL(bool), this, SLOT(button_multiply_clicked()));
	connect(button_devide, SIGNAL(bool), this, SLOT(button_devide_clicked()));
	connect(button_equal, SIGNAL(bool), this, SLOT(button_equal_clicked()));
	connect(button_clear, SIGNAL(bool), this, SLOT(button_clear_clicked()));
	connect(button_clearAll, SIGNAL(bool), this, SLOT(button_clearAll_clicked()));
	connect(button_square, SIGNAL(bool), this, SLOT(button_square_clicked()));
	connect(button_cube, SIGNAL(bool), this, SLOT(button_cube_clicked()));
	connect(button_sq_root, SIGNAL(bool), this, SLOT(button_sq_root_clicked()));
	connect(button_reciprocal, SIGNAL(bool), this, SLOT(button_reciprocal_clicked()));
	connect(button_x_Y, SIGNAL(bool), this, SLOT(button_x_Y_clicked()));
	connect(button_10_X, SIGNAL(bool), this, SLOT(button_10_X_clicked()));
	connect(button_Exp, SIGNAL(bool), this, SLOT(button_Exp_clicked()));
	connect(button_lg, SIGNAL(bool), this, SLOT(button_lg_clicked()));
	connect(button_ln, SIGNAL(bool), this, SLOT(button_ln_clicked()));
	connect(button_sin, SIGNAL(bool), this, SLOT(button_sin_clicked()));
	connect(button_cos, SIGNAL(bool), this, SLOT(button_cos_clicked()));
	connect(button_tan, SIGNAL(bool), this, SLOT(button_tan_clicked()));
	connect(button_opp, SIGNAL(bool), this, SLOT(button_opp_clicked()));
	connect(button_00, SIGNAL(bool), this, SLOT(button_00_clicked()));
	connect(button_decpoint, SIGNAL(bool), this, SLOT(button_decpoint_clicked()));
	connect(button_Mod, SIGNAL(bool), this, SLOT(button_Mod_clicked()));
	connect(button_Lsh, SIGNAL(bool), this, SLOT(button_Lsh_clicked()));
	connect(button_Rsh, SIGNAL(bool), this, SLOT(button_Rsh_clicked()));
	connect(button_RoL, SIGNAL(bool), this, SLOT(button_RoL_clicked()));
	connect(button_RoR, SIGNAL(bool), this, SLOT(button_RoR_clicked()));
	connect(button_Or, SIGNAL(bool), this, SLOT(button_Or_clicked()));
	connect(button_Xor, SIGNAL(bool), this, SLOT(button_Xor_clicked()));
	connect(button_Not, SIGNAL(bool), this, SLOT(button_Not_clicked()));
	connect(button_And, SIGNAL(bool), this, SLOT(button_And_clicked()));
	connect(button_backspace, SIGNAL(bool), this, SLOT(button_backspace_clicked()));
	connect(button_factorial, SIGNAL(bool), this, SLOT(button_factorial_clicked()));
	connect(button_left, SIGNAL(bool), this, SLOT(button_left_clicked()));
	connect(button_right, SIGNAL(bool), this, SLOT(button_right_clicked()));
}
